{"version":3,"sources":["pages/BannerDrawn.png","firebase.js","pages/home.js","pages/create.js","pages/post.js","pages/no-match.js","context/AuthContext.js","pages/login.js","pages/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebaseCache","config","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getFirebase","Home","useState","loading","setLoading","blogPosts","setBlogPosts","useHistory","length","database","ref","orderByChild","once","then","snapshot","posts","snapshotVal","val","slug","push","newestFirst","reverse","console","log","className","src","bannerImage","map","blogPost","key","coverImage","alt","coverImageAlt","title","style","color","datePretty","dangerouslySetInnerHTML","__html","content","substring","to","labelStyles","display","marginBottom","inputStyles","width","height","lineHeight","verticalAlign","fontSize","padding","Create","history","setTitle","setSlug","setCoverImage","setCoverImageAlt","setContent","margin","htmlFor","id","type","value","onChange","target","textAlign","border","backgroundColor","borderRadius","onClick","date","now","Date","year","getFullYear","month","getMonth","day","getDate","formatted","pretty","toLocaleDateString","generateDate","newPost","dateFormatted","child","set","Post","match","params","currentPost","setCurrentPost","NoMatch","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","Provider","Login","emailRef","useRef","passwordRef","error","setError","e","a","preventDefault","current","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","required","Button","disabled","PrivateRoute","Component","component","rest","render","props","App","exact","path","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4ee8f2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BannerDrawn.8c25f8d5.png\";","import firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport database from \"firebase/database\"\n\nconst config = firebase.initializeApp({\n    apiKey: \"AIzaSyAojZYoC9uNOpGUljPe8Wp4qYMqtDGlbtQ\",\n    authDomain: \"personal-blog-site-1c74c.firebaseapp.com\",\n    databaseURL: \"https://personal-blog-site-1c74c-default-rtdb.firebaseio.com\",\n    projectId: \"personal-blog-site-1c74c\",\n    storageBucket: \"personal-blog-site-1c74c.appspot.com\",\n    messagingSenderId: \"971089961173\",\n    appId: \"1:971089961173:web:325fc75de67574889a025c\"\n})\n\nlet firebaseCache;\nexport const auth = config.auth();\n\nexport const getFirebase = () => {\n    if (firebaseCache) {\n        return firebaseCache;\n    }\n    firebaseCache = firebase;\n    return firebase\n};\n\nexport default config","import React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\"\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getFirebase } from \"../firebase\";\nimport bannerImage from \"./BannerDrawn.png\"\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [blogPosts, setBlogPosts] = useState([]);\n  const history = useHistory()\n\n\n  if (loading && !blogPosts.length) {\n    getFirebase()\n      .database()\n      .ref(\"/posts\")\n      .orderByChild(\"dateFormatted\")\n      .once(\"value\")\n      .then(snapshot => {\n        let posts = [];\n        const snapshotVal = snapshot.val();\n        for (let slug in snapshotVal) {\n          posts.push(snapshotVal[slug]);\n        }\n\n        const newestFirst = posts.reverse();\n        setBlogPosts(newestFirst);\n        setLoading(false);\n      });\n  }\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n\nconsole.log(getFirebase())\n  return (\n    <>\n      <section className=\"top-banner-section\">\n        <div className=\"banner-image-div\">\n          <img className=\"banner-image\" src={bannerImage} />\n        </div>\n        <div className=\"banner-overlay-div\"></div>\n        <div className=\"banner-text-div\">\n          <span className=\"banner-text\">\n            <p className=\"banner-h1-text\">A Personal Blog: Diving Into Tech</p>\n            <p className=\"banner-body-text\">My stories and experiences taking a non-traditional route in tech</p>\n            <br></br>\n            <p>Banner art by Tanner Hebbel</p>\n          </span>\n        </div>\n      </section>\n     \n      <main>\n      {blogPosts.map(blogPost => (\n        <section key={blogPost.slug} className=\"card\">\n          <img src={blogPost.coverImage} alt={blogPost.coverImageAlt} />\n          <div className=\"card-content\">\n            <h2>\n              {blogPost.title} &mdash;{\" \"}\n              <span style={{ color: \"#5e5e5e\" }}>{blogPost.datePretty}</span>\n            </h2>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: `${blogPost.content.substring(0, 200)}...`\n              }}\n            ></p>\n            <Link to={`/${blogPost.slug}`}>Continue reading...</Link>\n          </div>\n        </section>\n      ))}\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { getFirebase } from \"../firebase\";\n\nconst labelStyles = {\n  display: \"block\",\n  marginBottom: 4\n};\n\nconst inputStyles = {\n  width: \"100%\",\n  height: \"2rem\",\n  lineHeight: \"2rem\",\n  verticalAlign: \"middle\",\n  fontSize: \"1rem\",\n  marginBottom: \"1.5rem\",\n  padding: \"0 0.25rem\"\n};\n\nconst generateDate = () => {\n  const now = new Date();\n  const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n\n  const year = now.getFullYear();\n\n  let month = now.getMonth() + 1;\n  if (month < 10) {\n    month = `0${month}`; // prepend with a 0\n  }\n\n  const day = now.getDate();\n  if (day < 10) {\n    day = `0${day}`; // prepend with a 0\n  }\n\n  return {\n    formatted: `${year}-${month}-${day}`,             // used for sorting\n    pretty: now.toLocaleDateString(\"en-US\", options)  // used for displaying\n  };\n};\n\n\nconst Create = ({history}) => {\n  const [title, setTitle] = useState(\"\");\n  const [slug, setSlug] = useState(\"\");\n  const [coverImage, setCoverImage] = useState(\"\");\n  const [coverImageAlt, setCoverImageAlt] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const createPost = () => {\n    const date = generateDate();\n    const newPost = {\n      title,\n      dateFormatted: date.formatted,\n      datePretty: date.pretty,\n      slug,\n      coverImage,\n      coverImageAlt,\n      content\n    };\n    getFirebase()\n      .database()\n      .ref()\n      .child(`posts/${slug}`)\n      .set(newPost)\n      .then(() => history.push(`/`));\n  };\n\n\n  return (\n    <>\n      <h1>Create a new post</h1>\n      <section style={{ margin: \"2rem 0\" }}>\n        <label style={labelStyles} htmlFor=\"title-field\">\n          Title\n        </label>\n        <input\n          style={inputStyles}\n          id=\"title-field\"\n          type=\"text\"\n          value={title}\n          onChange={({ target: { value } }) => {\n            setTitle(value);\n          }}\n        />\n\n        <label style={labelStyles} htmlFor=\"slug-field\">\n          Slug\n        </label>\n        <input\n          style={inputStyles}\n          id=\"slug-field\"\n          type=\"text\"\n          value={slug}\n          onChange={({ target: { value } }) => {\n            setSlug(value);\n          }}\n        />\n\n        <label style={labelStyles} htmlFor=\"cover-image-field\">\n          Cover image\n        </label>\n        <input\n          style={inputStyles}\n          id=\"cover-image-field\"\n          type=\"text\"\n          value={coverImage}\n          onChange={({ target: { value } }) => {\n            setCoverImage(value);\n          }}\n        />\n\n        <label style={labelStyles} htmlFor=\"cover-image-alt-field\">\n          Cover image alt\n        </label>\n        <input\n          style={inputStyles}\n          id=\"cover-image-alt-field\"\n          type=\"text\"\n          value={coverImageAlt}\n          onChange={({ target: { value } }) => {\n            setCoverImageAlt(value);\n          }}\n        />\n\n        <label style={labelStyles} htmlFor=\"content-field\">\n          Content\n        </label>\n        <textarea\n          style={{ ...inputStyles, height: 200, verticalAlign: \"top\" }}\n          id=\"content\"\n          type=\"text\"\n          value={content}\n          onChange={({ target: { value } }) => {\n            setContent(value);\n          }}\n        />\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            style={{\n              border: \"none\",\n              color: \"#fff\",\n              backgroundColor: \"#039be5\",\n              borderRadius: \"4px\",\n              padding: \"8px 12px\",\n              fontSize: \"0.9rem\"\n            }}\n            onClick={createPost}\n          >\n            Create\n          </button>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Create;","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getFirebase } from \"../firebase\";\n\nconst Post = ({ match }) => {\n  const slug = match.params.slug;\n  const [loading, setLoading] = useState(true);\n  const [currentPost, setCurrentPost] = useState();\n\n  if (loading && !currentPost) {\n    getFirebase()\n      .database()\n      .ref()\n      .child(`/posts/${slug}`)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.val()) {\n          setCurrentPost(snapshot.val());\n        }\n        setLoading(false);\n      });\n  }\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n  \n\n  const postDoesNotExist = !currentPost;\n  if (postDoesNotExist) {\n    return <Redirect to=\"/404\" />;\n  }\n\n  return (\n    <>\n      <img className=\"banner-image\" src={currentPost.coverImage} alt={currentPost.coverImageAlt}></img>\n      <h1>{currentPost.title}</h1>\n      <em>{currentPost.datePretty}</em>\n      <p dangerouslySetInnerHTML={{ __html: currentPost.content }}></p>\n    </>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NoMatch = () => (\n  <>\n    <h1>Hmmm... can't seem to find that page.</h1>\n    <Link to=\"/\">Take me home</Link>\n  </>\n);\n\nexport default NoMatch;\n","import React, { useContext, useEffect, useState } from 'react'\nimport {auth} from '../firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout() {\n        return auth.signOut\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n        })\n\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout\n        \n    }\n\n    return(\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert} from 'react-bootstrap'\nimport {useAuth} from '../context/AuthContext'\nimport { Link, useHistory} from 'react-router-dom'\n\nexport default function Login() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n\n    async function handlesSubmit(e) {\n        e.preventDefault()\n        console.log(emailRef.current.value)\n        try{\n            setError('')\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/create\")\n        }   catch {\n            setError('Failed to sign in')\n        }\n\n        setLoading(false)\n    }\n\n     return (\n         <>\n            <Card>\n                <Card.Body className=\"text-center mb-4\">\n                    <h2>Log In</h2>\n                    {error && <Alert variant=\"danger\">error</Alert>}\n                    <Form onSubmit={handlesSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center m-2\">\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\n            </div>\n        </>\n     )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport {useAuth} from '../context/AuthContext'\n\nexport default function PrivateRoute({ component: Component, ...rest }\n) {\n    const {currentUser} = useAuth()\n\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }}\n        ></Route>\n    )\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Home from \"./pages/home\";\nimport Create from \"./pages/create\";\nimport Post from \"./pages/post\";\nimport NoMatch from \"./pages/no-match\";\nimport Login from \"./pages/login\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport PrivateRoute from \"./pages/privateRoute\"\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">\n          <h2>Enrique Galindo</h2>\n        </Link>\n      </nav>\n        <AuthProvider>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <PrivateRoute path=\"/create\" component={Create} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/404\" component={NoMatch} />\n            <Route path=\"/:slug\" component={Post} />\n          </Switch>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}